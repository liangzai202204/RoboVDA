name: Build and upload artifact

on:
  push:
    branches:
      - 2.1.1  # 触发条件

jobs:
  build:
    runs-on: ubuntu-18.04    # 运行环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v2    # 拉取项目代码

      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'     # 设置Python环境

      - name: Install dependencies
        run: pip install -r requirements.txt  # 安装依赖，如果有的话

      - name: Build RoboVda
        run: pip install -r requirements.txt  # 安装依赖，如果有的话

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build and Package
        run: |
          pyinstaller --onefile src/RoboVda.py
          chmod 775 SeerRobotics/RoboVda-SRC/DEBIAN/postinst
          chmod 775 SeerRobotics/RoboVda-SRC/DEBIAN/prerm
          chmod 775 SeerRobotics/RoboVda-SRC/DEBIAN/preinst
          chmod 775 SeerRobotics/RoboVda-SRC/DEBIAN/postrm
          cp dist/RoboVda SeerRobotics/RoboVda-SRC/usr/local/SeerRobotics/vda/
          version=`grep "^Version:" SeerRobotics/RoboVda-SRC/DEBIAN/control | awk '{print $2}'`
          echo "VERSION=${version}" >> $GITHUB_ENV
          current_time=$(date +"%Y%m%d%H%M%S")
          filename="RoboVda-SRC-v${version}-${current_time}"
          dpkg-deb --build SeerRobotics/RoboVda-SRC ${filename}.deb
          zip -r ${filename}.zip ${filename}.deb      
          echo "ZIP_NAME=${filename}.zip" >> $GITHUB_ENV



      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ZIP_NAME }}
          path: ./${{ env.ZIP_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOVDA }}
        with:
          tag_name: v${{ env.VERSION}}
          release_name: Release v${{ env.VERSION}}
          draft: false
          prerelease: false


      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOVDA }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip
